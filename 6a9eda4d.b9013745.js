(window.webpackJsonp=window.webpackJsonp||[]).push([[35],{126:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return i})),n.d(t,"metadata",(function(){return o})),n.d(t,"rightToc",(function(){return l})),n.d(t,"default",(function(){return s}));var a=n(1),r=n(6),c=(n(0),n(155)),i={id:"querying",title:"Querying"},o={id:"querying",title:"Querying",description:"Elasticmagic has a simple and powerful DSL to define queries.",source:"@site/docs/querying.md",permalink:"/docs/querying",editUrl:"https://github.com/facebook/docusaurus/edit/master/website/docs/querying.md",sidebar:"docs",previous:{title:"Installation",permalink:"/docs/installation"},next:{title:"Aggregations",permalink:"/docs/aggregations"}},l=[{value:"How it works",id:"how-it-works",children:[]}],p={rightToc:l};function s(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(c.b)("wrapper",Object(a.a)({},p,n,{components:t,mdxType:"MDXLayout"}),Object(c.b)("p",null,"Elasticmagic has a simple and powerful DSL to define queries."),Object(c.b)("h2",{id:"how-it-works"},"How it works"),Object(c.b)("h4",{id:"searchquery"},"SearchQuery"),Object(c.b)("p",null,"To start writing queries you need a custom class which represents you document in Elasticsearch and extends Elasticmagic ",Object(c.b)("inlineCode",{parentName:"p"},"Doc")," class."),Object(c.b)("p",null,"Assume we have document ",Object(c.b)("inlineCode",{parentName:"p"},"Laptop")," in Elasticseach with the next mapping:"),Object(c.b)("pre",null,Object(c.b)("code",Object(a.a)({parentName:"pre"},{className:"language-javascript"}),"...\nproperties: {\n    model: {\n        type: 'string',\n    },\n    cpu: {\n        type: 'integer',\n    },\n    price: {\n        type: 'float',\n    }, \n    manufactured_at: {\n        type: 'date',\n    },   \n    manufacturer_id: {\n        type: 'integer',\n    }, \n    for_games: {\n        type: 'boolean',\n    },\n}\n")),Object(c.b)("p",null,"Let's declare custom document."),Object(c.b)("p",null,"You have to specify ",Object(c.b)("inlineCode",{parentName:"p"},"docType")," so the Elasticmagic will know which real document in Elasticseach this class represents."),Object(c.b)("pre",null,Object(c.b)("code",Object(a.a)({parentName:"pre"},{className:"language-javascript"}),"import { Doc } from 'elasticmagic';\n\nclass LaptopDoc extends Doc {\n  public static docType: string = 'laptop';\n} \n")),Object(c.b)("p",null,"Next declare static properties which maps the mapping of the document in Elasticsearch."),Object(c.b)("pre",null,Object(c.b)("code",Object(a.a)({parentName:"pre"},{className:"language-javascript"}),"import { \n  Doc, \n  Field,\n\n  StringType,\n  IntegerType,\n  DateType,\n  BooleanType,\n  FloatType,\n} from 'elasticmagic';\n\nclass LaptopDoc extends Doc {\n  public static docType: string = 'laptop';\n\n  public static model = new Field(StringType, 'model', Laptop);\n  public static cpu = new Field(IntegerType, 'cpu', Laptop);\n  public static price = new Field(FloatType, 'price', Laptop);\n  public static manufacturerId = new Field(IntegerType, 'manufacturer_id', Laptop);\n  public static manufacturedAt = new Field(DateType, 'manufactured_at', Laptop);\n  public static forGames = new Field(BooleanType, 'for_games', Laptop);\n} \n")),Object(c.b)("p",null,"If you planning to retreiveing source from document you have to declare instance properties."),Object(c.b)("p",null,"Instance properies will be populated from ",Object(c.b)("inlineCode",{parentName:"p"},"_source")," field in ",Object(c.b)("inlineCode",{parentName:"p"},"hit")," object of the result, so\nthe former must be in same case as fields in Elasticsearch;"),Object(c.b)("p",null,"Conventionaly, you can declare instance properties below static properties."),Object(c.b)("pre",null,Object(c.b)("code",Object(a.a)({parentName:"pre"},{className:"language-javascript"}),"import { \n  Doc, \n  Field,\n\n  StringType,\n  IntegerType,\n  DateType,\n  BooleanType,\n  FloatType,\n} from 'elasticmagic';\n\nclass LaptopDoc extends Doc {\n  public static docType: string = 'laptop';\n\n  public static model = new Field(StringType, 'model', Laptop);\n  public static cpu = new Field(IntegerType, 'cpu', Laptop);\n  public static price = new Field(FloatType, 'price', Laptop);\n  public static manufacturerId = new Field(IntegerType, 'manufacturer_id', Laptop);\n  public static manufacturedAt = new Field(DateType, 'manufactured_at', Laptop);\n  public static forGames = new Field(BooleanType, 'for_games', Laptop);\n\n  public model?: string;\n  public cpu?: number;\n  public price?: number;\n  public manufactured_id?: number;\n  public manufactured_at?: string; // ISO format string\n  public for_games?: boolean;\n} \n")),Object(c.b)("h5",{id:"creating-search-query"},"Creating search query"),Object(c.b)("p",null,"Now you are ready to start building search query."),Object(c.b)("p",null,Object(c.b)("inlineCode",{parentName:"p"},"SearchQuery")," instance can be created in 3 ways."),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"new SearchQuery()")," - will create unbound SearchQuery instance. Its enough to build a query, but to make a search request you have to bind query to ",Object(c.b)("inlineCode",{parentName:"li"},"Index")," or ",Object(c.b)("inlineCode",{parentName:"li"},"Cluster")," instance."),Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"new Cluster(...).searchQuery()")," - will created SearchQuery instance bounded to ",Object(c.b)("inlineCode",{parentName:"li"},"Cluster"),".  "),Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"new Index(...).searchQuery()")," - will created SearchQuery instance bounded to ",Object(c.b)("inlineCode",{parentName:"li"},"Index"),".  ")),Object(c.b)("p",null,"Prefered way is to call ",Object(c.b)("inlineCode",{parentName:"p"},".searchQuery()")," on ",Object(c.b)("inlineCode",{parentName:"p"},"index")," or ",Object(c.b)("inlineCode",{parentName:"p"},"cluster"),";"),Object(c.b)("h5",{id:"adding-filters"},"Adding filters"),Object(c.b)("p",null,"Each static propery of type ",Object(c.b)("inlineCode",{parentName:"p"},"Field")," has a list of methods used to build query. Its same as ",Object(c.b)("a",Object(a.a)({parentName:"p"},{href:""}),"TODO link to es docs"),"."),Object(c.b)("p",null,"For using ",Object(c.b)("inlineCode",{parentName:"p"},"bool")," expressions you can import ",Object(c.b)("inlineCode",{parentName:"p"},"Bool")," class from Elasticmagic."),Object(c.b)("pre",null,Object(c.b)("code",Object(a.a)({parentName:"pre"},{className:"language-javascript"}),"import { \n  Doc, \n  Field,\n\n  StringType,\n  IntegerType,\n  DateType,\n  BooleanType,\n  FloatType,\n\n  Bool,\n} from 'elasticmagic';\n\nconst query = new SearchQuery()\n  .filter(\n    Bool.must(\n      LaptopDoc.model.eq('Lenovo 530S'),\n      LaptopDoc.price.lte(1000),\n    )\n  );\n")),Object(c.b)("p",null,"And that's it. You have built a query."),Object(c.b)("p",null,"To see the json that Elasticmagic will generate to you:"),Object(c.b)("pre",null,Object(c.b)("code",Object(a.a)({parentName:"pre"},{className:"language-javascript"}),"console.log(query.toJSON());\n// or JSON.stringified and formatted string\nconsole.log(query.toPrettyJSON());\n")),Object(c.b)("h5",{id:"cloning-query"},"Cloning query"),Object(c.b)("p",null,Object(c.b)("inlineCode",{parentName:"p"},"SearchQuery")," instance is mutable so each chained method changes its state."),Object(c.b)("p",null,"If you want to start building another one query based on one you've already created, just call ",Object(c.b)("inlineCode",{parentName:"p"},".clone()")," method on ",Object(c.b)("inlineCode",{parentName:"p"},"SearchQuery")," instance."),Object(c.b)("p",null,"Next we will run search query against Elasticsearch"),Object(c.b)("h4",{id:"cluster"},"Cluster"),Object(c.b)("p",null,"To be able make queryies to Elasticsearch you have to create ",Object(c.b)("inlineCode",{parentName:"p"},"Cluster"),"."),Object(c.b)("p",null,Object(c.b)("inlineCode",{parentName:"p"},"Cluster")," represents Elasticsearch cluster and is binded to Elasticsearch ",Object(c.b)("inlineCode",{parentName:"p"},"Client")," from ",Object(c.b)("inlineCode",{parentName:"p"},"@elastic/elasticsearch")," package."),Object(c.b)("p",null,"Let's create new ",Object(c.b)("inlineCode",{parentName:"p"},"Cluster")," instance."),Object(c.b)("pre",null,Object(c.b)("code",Object(a.a)({parentName:"pre"},{className:"language-javascript"}),"import { Client } from '@elastic/elasticsearch';\nimport { Cluster } from 'elasticmagic';\n\nconst client = new Client({ node: 'http://localhost:9200' });\nconst cluster = new Cluster(client, 'laptop_index');\n")),Object(c.b)("p",null,"When passing index name as a second argument to ",Object(c.b)("inlineCode",{parentName:"p"},"Cluster"),", it will create ",Object(c.b)("inlineCode",{parentName:"p"},"Index")," instance under the hood."),Object(c.b)("blockquote",null,Object(c.b)("p",{parentName:"blockquote"},"Current ",Object(c.b)("inlineCode",{parentName:"p"},"Cluster")," implementation allows to make a query to only one index. Work on supporting multi index queries is in progress.")),Object(c.b)("p",null,"If you want to make a query to particular index, call ",Object(c.b)("inlineCode",{parentName:"p"},".withIndex(<index_name_or_instance>)")," method on ",Object(c.b)("inlineCode",{parentName:"p"},"Cluster")," instance. ",Object(c.b)("inlineCode",{parentName:"p"},"withIndex")," will change index for the whole cluster."),Object(c.b)("p",null,"If you want to specify different index for only one search query, you can call ",Object(c.b)("inlineCode",{parentName:"p"},".withIndex(<index_instance>)")," on ",Object(c.b)("inlineCode",{parentName:"p"},"SearchQuery"),". It will change index only for this query."),Object(c.b)("h5",{id:"making-a-request-to-elasticsearch"},"Making a request to Elasticsearch"),Object(c.b)("p",null,"Let's make a query"),Object(c.b)("pre",null,Object(c.b)("code",Object(a.a)({parentName:"pre"},{className:"language-javascript"}),"import { Client } from '@elastic/elasticsearch';\nimport { Cluster } from 'elasticmagic';\n\nconst client = new Client({ node: 'http://localhost:9200' });\nconst cluster = new Cluster(client, 'laptop_index');\n\nconst query = cluster.searchQuery()\n  .filter(\n    Bool.must(\n      LaptopDoc.model.eq('Lenovo 530S'),\n      LaptopDoc.price.lte(1000),\n    )\n  );\n\nconst result = await query.getResult();\n\n")))}s.isMDXComponent=!0},155:function(e,t,n){"use strict";n.d(t,"a",(function(){return u})),n.d(t,"b",(function(){return m}));var a=n(0),r=n.n(a);function c(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){c(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},c=Object.keys(e);for(a=0;a<c.length;a++)n=c[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(a=0;a<c.length;a++)n=c[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=r.a.createContext({}),s=function(e){var t=r.a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):o({},t,{},e)),n},u=function(e){var t=s(e.components);return r.a.createElement(p.Provider,{value:t},e.children)},b={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},d=Object(a.forwardRef)((function(e,t){var n=e.components,a=e.mdxType,c=e.originalType,i=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),u=s(n),d=a,m=u["".concat(i,".").concat(d)]||u[d]||b[d]||c;return n?r.a.createElement(m,o({ref:t},p,{components:n})):r.a.createElement(m,o({ref:t},p))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var c=n.length,i=new Array(c);i[0]=d;var o={};for(var l in t)hasOwnProperty.call(t,l)&&(o[l]=t[l]);o.originalType=e,o.mdxType="string"==typeof e?e:a,i[1]=o;for(var p=2;p<c;p++)i[p]=n[p];return r.a.createElement.apply(null,i)}return r.a.createElement.apply(null,n)}d.displayName="MDXCreateElement"}}]);